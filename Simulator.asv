function [tm,state] = Simulator( const )
    tspan = 0:const.dt:const.tf;
    initialConditions = [const.q_0; const.q_dot_0; const.L_0];
    [tm, state] = ode45(@pendulum, tspan, initialConditions);
    
    function  stateDeriv = pendulum(t, state)
       phi = state(1);
       phi_dot = state(2);
       L = state(3);
       
       G = const.G;
       L_dot_max = const.L_dot_max;
       
       L_dot = 0;
       
       epsilon = 0.2;
       % controller for optimal swinging
       % stand up if going through phi=0
       if abs(phi) < epsilon
           L_dot = -L_dot_max;
       end
       % squat if at apex phi_dot=0
       if abs(phi_dot) < epsilon
           L_dot = L_dot_max;
       end
           
       % prevent the rider from exceeding the height bounds
       epsilon = 0.001;
       if L >= const.L && L_dot > 0
           L_dot = -epsilon*L_dot_max;
       elseif L <= const.L_min && L_dot < 0
           L_dot = epsilon*L_dot_max;
       end
       
       % limit the length
       L = min(const.L_min, max(const.L, L));
       
       stateDeriv = [phi_dot; -2*L_dot/L*phi_dot - G/L*sin(phi); L_dot];
    end
end